# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  # base vm os configurations.
  config.vm.box = "geerlingguy/centos7"
  config.ssh.insert_key = false
  config.vm.synced_folder '.', '/vagrant', disabled: true

  # general virtualbox vm config
  config.vm.provider :virtualbox do |v|
    v.linked_clone =true
    v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    v.customize ["modifyvm", :id, "--ioapic", "on"]
  end

  config.vm.provision "ansible" do |ansible|
    ansible.playbook = "playbooks/main.yml"
  end

  # varnish
  # config.vm.define "varnish" do |varnish|
  #   varnish.vm.hostname = "varnish.lab"
  #   varnish.vm.network :private_network, ip: "192.168.2.2"
  # end

  # apache1
  # config.vm.define "www1" do |www1|
  #   www1.vm.hostname = "www1.lab"
  #   www1.vm.network :private_network, ip: "192.168.2.3"

  #   www1.vm.provision "shell",
  #     inline: "sudo yum update -y"
  # end

  # apache2
  # config.vm.define "www2" do |www2|
  #   www2.vm.hostname = "www2.lab"
  #   www2.vm.network :private_network, ip: "192.168.2.4"

  #   www2.vm.provision "shell",
  #     inline: "sudo yum update -y"
  # end

  # #mysql1
  # config.vm.define "db1" do |db1|
  #   db1.vm.hostname = "db1.lab"
  #   db1.vm.network :private_network, ip: "192.168.2.5"
  # end

  # #myssql2
  # config.vm.define "db2" do |db2|
  #   db2.vm.hostname = "db2.lab"
  #   db2.vm.network :private_network, ip: "192.168.2.6"
  # end

  # # memcached
  # config.vm.define "memcached" do |memcached|
  #   memcached.vm.hostname = "memcached.lab"
  #   memcached.vm.network :private_network, ip: "192.168.2.7"

  #   # run ansible provisioner once all vms are up
  #   memcached.vm.provision "ansible" do |ansible|
  #     ansible.playbook = "configure.yml"
  #     ansible.inventory_path = "inventories/vagrant/inventory"
  #     ansible.limit = "all"
  #     ansible.extra_vars = {
  #       ansible_ssh_user: 'vagrant',
  #       ansible_ssh_private_key_file: "~/.vagrant.d/insecure_private_key"
  #     }
  #   end
  # end
end
